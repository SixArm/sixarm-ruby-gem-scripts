#!/bin/sh
set -o errexit

##
# Publish our gem from our current directory
# to a variety of destinations (remote, github, etc.)
#
# This is intended for a directory with these kinds of files:
#   foo.gemspec  # gemspec file that sets the name, version, etc.
#   coverage     # autogenerated rcov files
#   doc/         # autogenerated rdoc files or yardoc files
#   lib/foo/     # class files
#   lib/foo.rb   # file that loads all the other files
#   test/        # test files
#
# ==Example
#   cd mygem
#   gemforge-publish
#   => removes all version of this gem, e.g. rm mygem-1.2.3.gem
#   => removes temp files, e.g. files ending in tilde, hash, etc.
#   => builds the gem
#   => rdoc with custom template
#   => git add, commit, push
#   => copy to railapp.com then remote gem generate
##

# Paths
gem='/usr/bin/env gem'
ruby='/usr/bin/env ruby'

# Where are we running?
pwd=`pwd`
basename=`basename $pwd`
gem_name=`gemspec-cat | gemspec-to-gem-name`
gem_name_version=`gemspec-cat | gemspec-to-gem-name-version`
commit_msg=$1

echo gemforge-publish $gem_name_version $commit_msg


### BUILD

gemforge-rm-old-files
gem build --quiet *.gemspec
gemforge-create-checksum $gem_name_version
gemforge-create-readme $gem_name
gemforge-create-doc
gemforge-lint || exit "gemforge-lint failed for gem $gem_name_version"

### PUBLISH

echo 'PUBLISH GITHUB...' && gemforge-publish-to-github "$commit_msg" && echo '...GITHUB DONE'
#echo 'PUBLISH LOCAL...'  && gemforge-publish-to-local-host  && echo '...LOCAL DONE'
#echo 'PUBLISH REMOTE...' && gemforge-publish-to-remote-host && echo '...REMOTE DONE'


